{-# STLIB-VERSION 3 #-}
{-# CONTENT_TYPE DAPP#-}
{-# SCRIPT_TYPE ACCOUNT #-}

// define public keys
let alicePubKey  = base58'5AzfA9UfpWVYiwFwvdr77k6LWupSTGLb14b24oVdEpMM'
let bobPubKey    = base58'2KwU4vzdgPmKyf7q354H9kSyX9NZjNiq4qbnH2wi2VDF'
let cooperPubKey = base58'GbrUeGaBfmyFJjSQb9Z8uTCej5GzjXfRDVGJGrmgt5cD'



// check global object tx with outgoing transaction details
@Verifier(tx)
func verify()={
  match(tx){
      case d:DataTransaction=>true
      case s:SetScriptTransaction =>
        // sigVerify(tx.bodyBytes, tx.proofs[0], tx.senderPublicKey)
        let aliceSigned  = if(sigVerify(tx.bodyBytes, tx.proofs[0], alicePubKey  )) then 1 else 0
        let bobSigned    = if(sigVerify(tx.bodyBytes, tx.proofs[1], bobPubKey    )) then 1 else 0
        let cooperSigned = if(sigVerify(tx.bodyBytes, tx.proofs[2], cooperPubKey )) then 1 else 0
        // sum up every valid proof to get at least 2
        aliceSigned + bobSigned + cooperSigned >= 2
        case_=>false
  }
}